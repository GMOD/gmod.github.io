<div id="mw-page-base" class="noprint">

</div>

<div id="mw-head-base" class="noprint">

</div>

<div id="content" class="mw-body" role="main">

<span id="top"></span>

<div id="mw-js-message" style="display:none;">

</div>

<div id="siteNotice">

<div id="localNotice" lang="en" dir="ltr">

<span style="color:red; background-color:lightblue;font-size=30px">NOTE:
We are working on migrating this site away from MediaWiki, so editing
pages will be disabled for now.</span>

</div>

</div>

# <span dir="auto">Apollo PureJDBCTransactionWriter HOWTO</span>

<div id="bodyContent">

<div id="siteSub">

From GMOD

</div>

<div id="contentSub">

</div>

<div id="jump-to-nav" class="mw-jump">

Jump to: [navigation](#mw-navigation), [search](#p-search)

</div>

<div id="mw-content-text" class="mw-content-ltr" lang="en" dir="ltr">

This HOWTO contains instructions for using the
[Apollo](Apollo.1 "Apollo") PureJDBCTransactionWriter, a component of
the chado/JDBC adapter that allows Apollo to save changes directly to a
<a href="Chado" class="mw-redirect" title="Chado">chado</a> database via
JDBC, without having to install any stored procedures or triggers in the
target database.

  

<div id="toc" class="toc">

<div id="toctitle">

## Contents

</div>

- [<span class="tocnumber">1</span>
  <span class="toctext">Background</span>](#Background)
- [<span class="tocnumber">2</span>
  <span class="toctext">Prerequisites</span>](#Prerequisites)
- [<span class="tocnumber">3</span> <span class="toctext">Edit
  configuration files</span>](#Edit_configuration_files)
  - [<span class="tocnumber">3.1</span>
    <span class="toctext">conf/apollo.cfg</span>](#conf.2Fapollo.cfg)
  - [<span class="tocnumber">3.2</span>
    <span class="toctext">conf/chado-adapter.xml</span>](#conf.2Fchado-adapter.xml)
  - [<span class="tocnumber">3.3</span> <span class="toctext">Style and
    tiers files</span>](#Style_and_tiers_files)
- [<span class="tocnumber">4</span> <span class="toctext">Configure
  and/or create name
  adapter</span>](#Configure_and.2For_create_name_adapter)
- [<span class="tocnumber">5</span> <span class="toctext">Test saving
  edits</span>](#Test_saving_edits)
- [<span class="tocnumber">6</span> <span class="toctext">Other
  notes</span>](#Other_notes)
- [<span class="tocnumber">7</span> <span class="toctext">Known
  limitations</span>](#Known_limitations)
- [<span class="tocnumber">8</span> <span class="toctext">Known
  bugs</span>](#Known_bugs)
- [<span class="tocnumber">9</span>
  <span class="toctext">FAQ</span>](#FAQ)
  - [<span class="tocnumber">9.1</span> <span class="toctext">Is it
    possible to use both JDBCTransactionWriter and
    PureJDBCTransactionWriter in the same Apollo
    install?</span>](#Is_it_possible_to_use_both_JDBCTransactionWriter_and_PureJDBCTransactionWriter_in_the_same_Apollo_install.3F)
- [<span class="tocnumber">10</span>
  <span class="toctext">Authors</span>](#Authors)

</div>

# <span id="Background" class="mw-headline">Background</span>

The [Apollo](Apollo.1 "Apollo")
<a href="Chado" class="mw-redirect" title="Chado">chado</a>/JDBC data
adapter currently supports **two** methods for saving changes made in
Apollo to a chado database via JDBC. These two methods are implemented
by the following (Java) classes:

- <a
  href="http://gmod.svn.sourceforge.net/viewvc/gmod/apollo/trunk/src/java/apollo/dataadapter/chado/jdbc/JDBCTransactionWriter.java"
  class="external text"
  rel="nofollow">apollo.dataadapter.chado.jdbc.JDBCTransactionWriter</a>
- <a
  href="http://gmod.svn.sourceforge.net/viewvc/gmod/apollo/trunk/src/java/apollo/dataadapter/chado/jdbc/PureJDBCTransactionWriter.java"
  class="external text"
  rel="nofollow">apollo.dataadapter.chado.jdbc.PureJDBCTransactionWriter</a>

In theory these two classes represent different implementations of the
same basic functionality. In practice, however, there are a number of
operational differences between the two. One of the most significant is
that the first class, JDBCTransactionWriter--which was also the first of
the two to be implemented--will only work if the target chado database
has been preloaded with a specific set of triggers and stored
procedures. The second class, PureJDBCTransactionWriter, does not
require any custom stored procedures or triggers, relying instead on
Java and JDBC to implement the logic encapsulated in the stored
procedures (hence the "Pure JDBC" designation.) The remainder of this
document deals almost entirely with how to configure Apollo to use the
second write method/class, the PureJDBCTransactionWriter. However, there
are pros and cons to both of these classes/methods, which should be
considered before settling on one or the other for a particular
application. For more information about the differences between the two
(albeit from the perspective of the initial author of the second class),
and the reasons for adding the PureJDBCTransactionWriter, please see the
detailed commit logs for the class, in particular the comments that
accompanied the initial commit of <a
href="http://gmod.svn.sourceforge.net/viewvc/gmod/apollo/trunk/src/java/apollo/dataadapter/chado/jdbc/PureJDBCTransactionWriter.java?view=log#rev8349#rev8349"
class="external text" rel="nofollow">PureJDBCTransactionWriter.java</a>.

# <span id="Prerequisites" class="mw-headline">Prerequisites</span>

- An [Apollo](Apollo.1 "Apollo")-compatible
  <a href="Chado" class="mw-redirect" title="Chado">Chado</a> database
- A copy of Apollo built from the latest
  <a href="SVN" class="mw-redirect" title="SVN">SVN</a> trunk.
- Any configuration files or settings required to get Apollo to **read**
  from the aforementioned Chado database using the Chado/JDBC adapter.
- An indefatigable devotion to working with beta code

# <span id="Edit_configuration_files" class="mw-headline">Edit configuration files</span>

## <span id="conf.2Fapollo.cfg" class="mw-headline">conf/apollo.cfg</span>

     SaveClonedFeaturesInTransactions  "true"

Set the above parameter to **true** to activate a reverse-compatible
change to the way that Apollo tracks transactions internally that is
essential for the PureJDBCTransactionWriter to work correctly. A more
detailed explanation of this parameter and the reason for its existence
can be found <a
href="http://gmod.svn.sourceforge.net/viewvc/gmod/apollo/trunk/src/java/apollo/config/Config.java?view=log#rev8352#rev8352"
class="external text" rel="nofollow">in the Subversion log</a>.

## <span id="conf.2Fchado-adapter.xml" class="mw-headline">conf/chado-adapter.xml</span>

Note that all of the following are properties of the \<chadoInstance\>
that corresponds to the target chado database(s):

     <pureJDBCWriteMode>true</pureJDBCWriteMode>

Setting this to **true** instructs Apollo to use the
PureJDBCTransactionWriter for writes to any database associated with
this chadoInstance. If set to **false** (the default value) then the
JDBCTransactionWriter will be used instead.

     <pureJDBCCopyOnWrite>false</pureJDBCCopyOnWrite>

This should be set to false or omitted from the configuration file, as
the "copy on write" mode has not yet been implemented. At issue here is
whether Apollo should perform an "in-place" update of the chado database
(i.e., **false**, the current default) or attempt to maintain the
complete history of annotations/edits by creating a copy of the affected
portions of the data model and using chado feature_relationship rows of
type 'derives_from' to track the changes (i.e., **true**, the as-yet
unimplemented "copy on write" mode.)

     <pureJDBCNoCommit>false</pureJDBCNoCommit>

Set this to **false** for production use; when set to **true** the
PureJDBCTransactionWriter will issue an SQL ROLLBACK at the very end of
each Save operation. This can be useful during testing as it allows one
to check whether the writer is generating the correct sequence of SQL
statements, but without changing the database. Note however that its
utility is frequently limited to a single "Save" operation, because the
SQL statements generated by the writer in subsequent save operations
will often depend on changes that were made permanent in a previous
Save. In other words, Apollo assumes that its internal data model is in
agreement with the database after every "Save", and this assumption is
invalidated by the ROLLBACKs generated in "no commit" mode.

Note that the \<writebackXmlTemplateFile\> is **not** used by the
PureJDBCTransactionWriter. One advantage of the
PureJDBCTransactionWriter over the JDBCTransactionWriter is that it
delegates any and all update operations to the JdbcChadoAdapter, making
it unnecessary to store duplicated configuration information in another
file.

## <span id="Style_and_tiers_files" class="mw-headline">Style and tiers files</span>

Create .style and .tiers files as described in the
<a href="http://www.fruitfly.org/annot/apollo/userguide.html"
class="external text" rel="nofollow">Apollo user guide</a>, but note
that the name adapters assigned to feature types in the .tiers files
(via the name_method parameter) must be configured as described below.

# <span id="Configure_and.2For_create_name_adapter" class="mw-headline">Configure and/or create name adapter</span>

Another crucial difference between the PureJDBCTransactionWriter and the
JDBCTransactionWriter is that the former assigns (permanent) names to
new features at the time they are created, whereas the latter assigns
names at the time they are inserted into the database, and uses
temporary names/ids in the interim.

There are two name adapter implementations that are known to work and
have been tested with the PureJDBCTransactionWriter:

- <a
  href="http://gmod.svn.sourceforge.net/viewvc/gmod/apollo/trunk/src/java/apollo/config/TigrAnnotNameAdapter.java"
  class="external text"
  rel="nofollow">apollo.config.TigrAnnotNameAdapter</a>
- <a
  href="http://gmod.svn.sourceforge.net/viewvc/gmod/apollo/trunk/src/java/apollo/config/ParameciumNameAdapter.java"
  class="external text"
  rel="nofollow">apollo.config.ParameciumNameAdapter</a>

It is possible that other name adapters will work without modification
but this has not been verified. If it is necessary to create a new name
adapter it should be possible to modify one of the above name adapters
to work with a different database. The ParameciumNameAdapter works with
a [PostgreSQL](PostgreSQL "PostgreSQL")
<a href="Chado" class="mw-redirect" title="Chado">Chado</a> database and
queries the database itself (at feature creation time) to generate new
unique ids. The TigrAnnotNameAdapter, on the other hand, works with a
Sybase Chado database and relies on an external program (the path to
which is defined by the **TigrAnnotNameAdapterNewNameCommand** global
configuration parameter in `apollo.cfg`) to generate new ids.

If an existing name adapter (other than the two mentioned above) does
not work with the PureJDBCTransactionWriter, it may be because the
adapter has not been updated to take into account changes in the
ApolloNameAdapterI interface that were introduced to accommodate the new
writer class. See <a
href="http://gmod.svn.sourceforge.net/viewvc/gmod/apollo/trunk/src/java/apollo/config/ApolloNameAdapterI.java?view=log#rev8463#rev8463"
class="external text" rel="nofollow">revision 8463</a> and <a
href="http://gmod.svn.sourceforge.net/viewvc/gmod/apollo/trunk/src/java/apollo/config/ApolloNameAdapterI.java?view=log#rev8370#rev8370"
class="external text" rel="nofollow">revision 8370</a> for additional
details.

# <span id="Test_saving_edits" class="mw-headline">Test saving edits</span>

Test the new name adapter with \<pureJDBCNoCommit\> set to true and
\<logDirectory\> set to a writable log directory (these are both
properties of the \<chadoInstance\> in the chado-adapter.xml
configuration file.) This will allow all the basic write functions
(delete gene, split transcript, add new transcript, merge transcripts,
etc.) to be debugged without modifying (and possibly corrupting) the
database. In the case an error occurs the relevant
<a href="http://logging.apache.org/log4j/docs/index.html"
class="external text" rel="nofollow">Log4J</a> log files (in
\<logDirectory\>) can be examined (e.g., using
<a href="http://logging.apache.org/log4j/docs/chainsaw.html"
class="external text" rel="nofollow">chainsaw</a>) to determine what
went wrong.

# <span id="Other_notes" class="mw-headline">Other notes</span>

The following changes to the chado/JDBC adapter are not all directly
related to the development of the PureJDBCTransactionWriter, but may be
of use when setting up the Apollo configuration to \*read\* from the
chado database. These are all properties of the \<chadoInstance\> in
chado-adapter.xml:

     <logDirectory>/home/username/.apollo</logDirectory>

This parameter was introduced as part of the project to convert Apollo
to use Log4J for all logging operations (versus writing directly to
stderr/stdout.) When this parameter is defined the chado/JDBC adapter
will automatically create two timestamped log files in the specified
directory for each and every Apollo session. These log files will
contain a record of all the SQL statements executed by the chado/JDBC
adapter and, in the case of the PureJDBCTransactionWriter, a record of
the mapping from Apollo transactions to JDBC/SQL statements. These logs
are written in Log4J's XML format and are best examined using a tool
like <a href="http://logging.apache.org/log4j/docs/chainsaw.html"
class="external text" rel="nofollow">chainsaw</a>.

     <queryFeatureIdWithUniquename>true</queryFeatureIdWithUniquename>
     <queryFeatureIdWithName>false</queryFeatureIdWithName>

The original JdbcChadoAdapter would query for chado feature_ids using
**both** the chado feature.uniquename and chado feature.name, using an
SQL query like the following:

     SELECT f.feature_id FROM feature f WHERE (f.uniquename = 'genename' OR f.name = 'genename')

These two parameters allow one to specify that lookups should be done
using **only** the chado feature.uniquename (by setting
\<queryFeatureIdWithName\> to **false**) or **only** the chado
feature.name (by setting \<queryFeatureIdWithUniquename\> to **false**).
Depending on the DBMS and database configuration this may result in
faster feature_id lookups. This is an issue that affects the
PureJDBCTransactionWriter because a typical commit/save operation can
entail numerous feature_id lookups and therefore the speed of the
lookups can have a substantial impact on performance. If both of these
parameters are set to **false** then the chado/JDBC adapter will
generate a runtime error. If both are set to **true** (or are omitted)
then the adapter reverts to its original behavior.

# <span id="Known_limitations" class="mw-headline">Known limitations</span>

- The current PureJDBCTransactionWriter implementation has no support
  for exon sharing. In other words, if two different splice forms of the
  same Apollo-created gene have a shared exon, the writer will insert an
  exon feature (and featureloc) for each of them.
- PureJDBCTransactionWriter currently does not support name adapters
  that assign "temp" ids (which are unique only within the current
  Apollo session) that are later replaced by "permanent" ids (which are
  unique within the target database.)
- Since both JDBC writer classes rely on saving a list of Apollo
  transactions to the database they can generally only be used to "Save"
  to the same chado database from which the annotations were first read.
- A corollary of the fact that the JDBC writer classes work almost
  solely off the transaction list (i.e., a set of diffs to a known
  database state) is that they have no direct way to detect if the
  database has been edited by another process sometime between loading
  the annotations and saving the transactions that correspond to the
  user's edits. It is currently assumed that curators and database
  editors use a manual protocol to avoid write conflicts (e.g.,
  "checking out" contigs by editing a wiki page or master list.)

# <span id="Known_bugs" class="mw-headline">Known bugs</span>

- In some circumstances the PureJDBCTransactionWriter will write overly
  long amino acid sequences to the database (i.e., sequences that
  contain in-frame stops). This problem is not always apparent because
  when Apollo re-loads the relevant feature(s) it appears to
  automatically correct the erroneous translation.
- Certain save operations (e.g., for information that can only be edited
  in the Apollo Annotation Info Editor) may not be supported by the
  PureJDBCTransactionWriter.

# <span id="FAQ" class="mw-headline">FAQ</span>

### <span id="Is_it_possible_to_use_both_JDBCTransactionWriter_and_PureJDBCTransactionWriter_in_the_same_Apollo_install.3F" class="mw-headline">Is it possible to use both JDBCTransactionWriter and PureJDBCTransactionWriter in the same Apollo install?</span>

Yes, this is possible, at least in theory. The choice of write method
can be made on a per-chadoInstance basis in the chado-adapter.xml
configuration file, by setting the \<pureJDBCWriteMode\> flag. Although
it is necessary to set the global configuration option
SaveClonedFeaturesInTransactions to **true** in order for the
PureJDBCTransactionWriter to work, the setting of this parameter should
not affect the JDBCTransactionWriter in any way.

# <span id="Authors" class="mw-headline">Authors</span>

- <a
  href="http://gmod.org/mediawiki/index.php?title=User:Jcrabtree&amp;action=edit&amp;redlink=1"
  class="new" title="User:Jcrabtree (page does not exist)">Jcrabtree</a>

</div>

<div class="printfooter">

Retrieved from
"<http://gmod.org/mediawiki/index.php?title=Apollo_PureJDBCTransactionWriter_HOWTO&oldid=9343>"

</div>

<div id="catlinks" class="catlinks">

<div id="mw-normal-catlinks" class="mw-normal-catlinks">

[Categories](Special:Categories "Special:Categories"):

- [Apollo](Category:Apollo "Category:Apollo")
- [Chado](Category:Chado "Category:Chado")
- [Java](Category:Java "Category:Java")
- [HOWTO](Category:HOWTO "Category:HOWTO")

</div>

</div>

<div class="visualClear">

</div>

</div>

</div>

<div id="mw-navigation">

## Navigation menu

<div id="mw-head">

<div id="p-personal" role="navigation"
aria-labelledby="p-personal-label">

### Personal tools

- <span id="pt-login"><a
  href="http://gmod.org/mediawiki/index.php?title=Special:UserLogin&amp;returnto=Apollo+PureJDBCTransactionWriter+HOWTO"
  accesskey="o"
  title="You are encouraged to log in; however, it is not mandatory [o]">Log
  in / create account</a></span>

</div>

<div id="left-navigation">

<div id="p-namespaces" class="vectorTabs" role="navigation"
aria-labelledby="p-namespaces-label">

### Namespaces

- <span id="ca-nstab-main"><a href="Apollo_PureJDBCTransactionWriter_HOWTO" accesskey="c"
  title="View the content page [c]">Page</a></span>
- <span id="ca-talk"><a
  href="http://gmod.org/mediawiki/index.php?title=Talk:Apollo_PureJDBCTransactionWriter_HOWTO&amp;action=edit&amp;redlink=1"
  accesskey="t"
  title="Discussion about the content page [t]">Discussion</a></span>

</div>

<div id="p-variants" class="vectorMenu emptyPortlet" role="navigation"
aria-labelledby="p-variants-label">

### 

### Variants[](#)

<div class="menu">

</div>

</div>

</div>

<div id="right-navigation">

<div id="p-views" class="vectorTabs" role="navigation"
aria-labelledby="p-views-label">

### Views

- <span id="ca-view">[Read](Apollo_PureJDBCTransactionWriter_HOWTO)</span>
- <span id="ca-viewsource"><a
  href="http://gmod.org/mediawiki/index.php?title=Apollo_PureJDBCTransactionWriter_HOWTO&amp;action=edit"
  accesskey="e" title="This page is protected.
  You can view its source [e]">View source</a></span>
- <span id="ca-history"><a
  href="http://gmod.org/mediawiki/index.php?title=Apollo_PureJDBCTransactionWriter_HOWTO&amp;action=history"
  accesskey="h" title="Past revisions of this page [h]">View history</a></span>

</div>

<div id="p-cactions" class="vectorMenu emptyPortlet" role="navigation"
aria-labelledby="p-cactions-label">

### Actions[](#)

<div class="menu">

</div>

</div>

<div id="p-search" role="search">

### Search

<div id="simpleSearch">

</div>

</div>

</div>

</div>

<div id="mw-panel">

<div id="p-logo" role="banner">

<a href="Main_Page"
style="background-image: url(../images/GMOD-cogs.png);"
title="Visit the main page"></a>

</div>

<div id="p-Navigation" class="portal" role="navigation"
aria-labelledby="p-Navigation-label">

### Navigation

<div class="body">

- <span id="n-GMOD-Home">[GMOD Home](Main_Page)</span>
- <span id="n-Software">[Software](GMOD_Components)</span>
- <span id="n-Categories-.2F-Tags">[Categories /
  Tags](Categories)</span>
- <span id="n-View-all-pages">[View all pages](Special:AllPages)</span>

</div>

</div>

<div id="p-Documentation" class="portal" role="navigation"
aria-labelledby="p-Documentation-label">

### Documentation

<div class="body">

- <span id="n-Overview">[Overview](Overview)</span>
- <span id="n-FAQs">[FAQs](Category:FAQ)</span>
- <span id="n-HOWTOs">[HOWTOs](Category:HOWTO)</span>
- <span id="n-Glossary">[Glossary](Glossary)</span>

</div>

</div>

<div id="p-Community" class="portal" role="navigation"
aria-labelledby="p-Community-label">

### Community

<div class="body">

- <span id="n-GMOD-News">[GMOD News](GMOD_News)</span>
- <span id="n-Training-.2F-Outreach">[Training /
  Outreach](Training_and_Outreach)</span>
- <span id="n-Support">[Support](Support)</span>
- <span id="n-GMOD-Promotion">[GMOD Promotion](GMOD_Promotion)</span>
- <span id="n-Meetings">[Meetings](Meetings)</span>
- <span id="n-Calendar">[Calendar](Calendar)</span>

</div>

</div>

<div id="p-tb" class="portal" role="navigation"
aria-labelledby="p-tb-label">

### Tools

<div class="body">

- <span id="t-whatlinkshere"><a href="Special:WhatLinksHere/Apollo_PureJDBCTransactionWriter_HOWTO"
  accesskey="j" title="A list of all wiki pages that link here [j]">What
  links here</a></span>
- <span id="t-recentchangeslinked"><a
  href="Special:RecentChangesLinked/Apollo_PureJDBCTransactionWriter_HOWTO"
  accesskey="k"
  title="Recent changes in pages linked from this page [k]">Related
  changes</a></span>
- <span id="t-specialpages"><a href="Special:SpecialPages" accesskey="q"
  title="A list of all special pages [q]">Special pages</a></span>
- <span id="t-print"><a
  href="http://gmod.org/mediawiki/index.php?title=Apollo_PureJDBCTransactionWriter_HOWTO&amp;printable=yes"
  rel="alternate" accesskey="p"
  title="Printable version of this page [p]">Printable version</a></span>
- <span id="t-permalink">[Permanent
  link](http://gmod.org/mediawiki/index.php?title=Apollo_PureJDBCTransactionWriter_HOWTO&oldid=9343 "Permanent link to this revision of the page")</span>
- <span id="t-info">[Page
  information](http://gmod.org/mediawiki/index.php?title=Apollo_PureJDBCTransactionWriter_HOWTO&action=info)</span>
- <span id="t-smwbrowselink"><a href="Special:Browse/Apollo_PureJDBCTransactionWriter_HOWTO"
  rel="smw-browse">Browse properties</a></span>
- <span id="t-pdf">[Print as
  PDF](http://gmod.org/mediawiki/index.php?title=Special:PdfPrint&page=Apollo_PureJDBCTransactionWriter_HOWTO)</span>

</div>

</div>

</div>

</div>

<div id="footer" role="contentinfo">

- <span id="footer-info-lastmod">Last updated at 21:58 on 15 September
  2009.</span>
- <span id="footer-info-viewcount">51,821 page views.</span>
- <span id="footer-info-copyright">Content is available under
  <a href="http://www.gnu.org/licenses/fdl-1.3.html" class="external"
  rel="nofollow">a GNU Free Documentation License</a> unless otherwise
  noted.</span>

<!-- -->

- <span id="footer-places-about">[About
  GMOD](GMOD:About "GMOD:About")</span>

<!-- -->

- <span id="footer-copyrightico">[<img src="http://www.gnu.org/graphics/gfdl-logo-small.png" width="88"
  height="31" alt="a GNU Free Documentation License" />](http://www.gnu.org/licenses/fdl-1.3.html)</span>
- <span id="footer-poweredbyico">[<img
  src="../mediawiki/skins/common/images/poweredby_mediawiki_88x31.png"
  width="88" height="31" alt="Powered by MediaWiki" />](http://www.mediawiki.org/)
  [<img
  src="../mediawiki/extensions/SemanticMediaWiki/resources/images/smw_button.png"
  width="88" height="31" alt="Powered by Semantic MediaWiki" />](https://www.semantic-mediawiki.org/wiki/Semantic_MediaWiki)</span>

<div style="clear:both">

</div>

</div>
